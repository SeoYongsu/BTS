<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	
	<!-- 외부설정 프로머티를 사용한다는 부분 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<!-- 외부설정 프로퍼티 파일의 경로 -->
			<!-- 한가지 이상의 프로퍼티 이용시 <list> </list>를 이용한다. -->
			<value>classpath:jdbc.properties</value>
		</property>
	</bean>

	<!-- 불러온 프로퍼티값은 ${프로퍼티명} 으로 사용할 수 있게된다. -->
	<bean id="logDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="validationQuery" value="select 1" /> <!-- 오라클이랑 MySql 은 여기 부분이 다름 -->
	</bean>
	
	<!-- statement 생성 부분 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		
		<!-- mybatis xml 파일과 mapper클래가 동일한 classpath에 있지않을 경우 사용 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml" />
		
		<!-- mybatis 구성요소 경로 -->
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
	</bean>
	
	
	<!-- -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory"></constructor-arg>
	</bean>
	
	<!-- mapper -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="kr.pb.bts.mapper" />
	</bean>	
	
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>	
	
	<!-- 로그확인용 -->
	<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="logDataSource" />
		<property name="logFormatter">
			<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
				<property name="loggingType" value="MULTI_LINE" />
				<property name="sqlPrefix" value="SQL::: " />
			</bean>
		</property>
	</bean>
	
</beans>